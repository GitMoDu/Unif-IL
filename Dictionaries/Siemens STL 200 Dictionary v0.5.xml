<?xml version="1.0" encoding="ISO-8859-15"?>
<conversion_library>
<title>Siemens Step 7 S-200 STL</title>
<id>SIEMENSS200></id>
<author>André Pereira</author>
<year>2011</year>
<version>0.5</version>
<conversion_rules>

<comment_markers>
<start>//</start>
<end></end>
</comment_markers>

<stack_manipulators>
<new_stack>LD</new_stack>
<new_stack>LDN</new_stack>
</stack_manipulators>

<variable_types>
<variable_type>
<description>digital input</description>
<old>I*.*</old>
<new>input digital</new>
</variable_type>
<variable_type>
<description>digital output</description>
<old>Q*.*</old>
<new>output digital</new>
</variable_type>
<variable_type>
<description>analog input</description>
<old>AIW*</old>
<new>input analog</new>
</variable_type>
<variable_type>
<description>analog output</description>
<old>AQW*</old>
<new>output analog</new>
</variable_type>
<variable_type>
<description>Memory bit</description>
<old>M*.*</old>
<new>global binary</new>
</variable_type>
<variable_type>
<description>Permanent memory bit</description>
<old>MB*</old>
<new>global binary</new>
</variable_type>
<variable_type>
<description>Special memory</description>
<old>SM*.*</old>
<new>global ?</new>
</variable_type>
<variable_type>
<description>Timer</description>
<old>T*</old>
<new>timer</new>
</variable_type>
<variable_type>
<description>Counter</description>
<old>C**</old>
<new>counter</new>
</variable_type>
<variable_type>
<description>High Speed counter</description>
<old>HC*</old>
<new>counter</new>
</variable_type>
<variable_type>
<description>Accumulator registers</description>
<old>AC*</old>
<new>?</new>
</variable_type>
<variable_type>
<description>Sequential control relays</description>
<old>S*.*</old>
<new>?</new>
</variable_type>
</variable_types>
<instructions>
<instruction>
<old_instruction>A</old_instruction>
<new_instruction>AND</new_instruction>
<rules>declare argument</rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>AN</old_instruction>
<new_instruction>ANDN</new_instruction>
<rules>declare argument</rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>O</old_instruction>
<new_instruction>OR</new_instruction>
<rules>declare argument</rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>ON</old_instruction>
<new_instruction>ORN</new_instruction>
<rules>declare argument</rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>LD</old_instruction>
<new_instruction>LD</new_instruction>
<rules>declare argument</rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>L</old_instruction>
<new_instruction>LD</new_instruction>
<rules>declare argument</rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>Network</old_instruction>
<new_instruction></new_instruction>
<rules></rules>
<outcome></outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>=</old_instruction>
<new_instruction>ST</new_instruction>
<rules>declare argument</rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>OLD</old_instruction>
<new_instruction>OR(</new_instruction>
<rules>add new_instruction argument at last new_stack</rules>
<rules>delete line at last new_stack</rules>
<outcome>")"</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>ALD</old_instruction>
<new_instruction>AND(</new_instruction>
<rules>add new_instruction argument at last new_stack</rules>
<rules>delete line at last new_stack</rules>
<outcome>")"</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>JL</old_instruction>
<new_instruction>JMP</new_instruction>
<rules></rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>LBL</old_instruction>
<new_instruction>:</new_instruction>
<rules>delete space outcome</rules>
<outcome>argument instruction</outcome>
<conditionals></conditionals>
</instruction>
<instruction>
<old_instruction>JMP</old_instruction>
<new_instruction>JMPC</new_instruction>
<rules></rules>
<outcome>instruction argument</outcome>
<conditionals></conditionals>
</instruction>
</instructions>

<general_rules>
<general_rule>
<condition></condition>
<outcome>"//Siemens Step 7 S-200 STL translation dictionary"</outcome>
</general_rule>
</general_rules>

</conversion_rules>
</conversion_library>


